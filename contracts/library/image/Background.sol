// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

library Background {
    string constant internal BACKGROUND_PREFIX = "<path stroke=\"#";
    string constant internal BACKGROUND_SUFFIX = "\" d=\"M0 0h32M0 1h32M0 2h32M0 3h32M0 4h32M0 5h32M0 6h32M0 7h32M0 8h32M0 9h32M0 10h32M0 11h32M0 12h32M0 13h32M0 14h32M0 15h32M0 16h32M0 17h32M0 18h32M0 19h32M0 20h32M0 21h32M0 22h32M0 23h32M0 24h32M0 25h32M0 26h32M0 27h32M0 28h32M0 29h32M0 30h32M0 31h32\" />";

    string constant internal B00 = "ffffff";
    string constant internal B01 = "cef2ce";
    string constant internal B02 = "F2D6D6";
    string constant internal B03 = "D4F2F0";
    string constant internal B04 = "F2F1D8";
    string constant internal B05 = "B0C0E3";
    string constant internal B06 = "EA9CFF";
    string constant internal B07 = "E0E0E0";

    string constant internal S00 = "<path stroke=\"#e0ebe0\" d=\"M2 0h1M6 0h1M10 0h1M14 0h1M18 0h1M22 0h1M26 0h1M30 0h1M0 3h1M4 3h1M8 3h1M12 3h1M16 3h1M20 3h1M24 3h1M28 3h1M2 6h1M6 6h1M10 6h1M14 6h1M18 6h1M22 6h1M26 6h1M30 6h1M0 9h1M4 9h1M8 9h1M12 9h1M16 9h1M20 9h1M24 9h1M28 9h1M2 12h1M6 12h1M10 12h1M14 12h1M18 12h1M22 12h1M26 12h1M30 12h1M0 15h1M4 15h1M8 15h1M12 15h1M16 15h1M20 15h1M24 15h1M28 15h1M2 18h1M6 18h1M10 18h1M14 18h1M18 18h1M22 18h1M26 18h1M30 18h1M0 21h1M4 21h1M8 21h1M12 21h1M16 21h1M20 21h1M24 21h1M28 21h1M2 24h1M6 24h1M10 24h1M14 24h1M18 24h1M22 24h1M26 24h1M30 24h1M0 27h1M4 27h1M8 27h1M12 27h1M16 27h1M20 27h1M24 27h1M28 27h1M2 30h1M6 30h1M10 30h1M14 30h1M18 30h1M22 30h1M26 30h1M30 30h1\" /><path stroke=\"#d4e2d3\" d=\"M3 0h1M7 0h1M11 0h1M15 0h1M19 0h1M23 0h1M27 0h1M31 0h1M2 1h1M6 1h1M10 1h1M14 1h1M18 1h1M22 1h1M26 1h1M30 1h1M1 3h1M5 3h1M9 3h1M13 3h1M17 3h1M21 3h1M25 3h1M29 3h1M0 4h1M4 4h1M8 4h1M12 4h1M16 4h1M20 4h1M24 4h1M28 4h1M3 6h1M7 6h1M11 6h1M15 6h1M19 6h1M23 6h1M27 6h1M31 6h1M2 7h1M6 7h1M10 7h1M14 7h1M18 7h1M22 7h1M26 7h1M30 7h1M1 9h1M5 9h1M9 9h1M13 9h1M17 9h1M21 9h1M25 9h1M29 9h1M0 10h1M4 10h1M8 10h1M12 10h1M16 10h1M20 10h1M24 10h1M28 10h1M3 12h1M7 12h1M11 12h1M15 12h1M19 12h1M23 12h1M27 12h1M31 12h1M2 13h1M6 13h1M10 13h1M14 13h1M18 13h1M22 13h1M26 13h1M30 13h1M1 15h1M5 15h1M9 15h1M13 15h1M17 15h1M21 15h1M25 15h1M29 15h1M0 16h1M4 16h1M8 16h1M12 16h1M16 16h1M20 16h1M24 16h1M28 16h1M3 18h1M7 18h1M11 18h1M15 18h1M19 18h1M23 18h1M27 18h1M31 18h1M2 19h1M6 19h1M10 19h1M14 19h1M18 19h1M22 19h1M26 19h1M30 19h1M1 21h1M5 21h1M9 21h1M13 21h1M17 21h1M21 21h1M25 21h1M29 21h1M0 22h1M4 22h1M8 22h1M12 22h1M16 22h1M20 22h1M24 22h1M28 22h1M3 24h1M7 24h1M11 24h1M15 24h1M19 24h1M23 24h1M27 24h1M31 24h1M2 25h1M6 25h1M10 25h1M14 25h1M18 25h1M22 25h1M26 25h1M30 25h1M1 27h1M5 27h1M9 27h1M13 27h1M17 27h1M21 27h1M25 27h1M29 27h1M0 28h1M4 28h1M8 28h1M12 28h1M16 28h1M20 28h1M24 28h1M28 28h1M3 30h1M7 30h1M11 30h1M15 30h1M19 30h1M23 30h1M27 30h1M31 30h1M2 31h1M6 31h1M10 31h1M14 31h1M18 31h1M22 31h1M26 31h1M30 31h1\" /><path stroke=\"#a5c3a4\" d=\"M3 1h1M7 1h1M11 1h1M15 1h1M19 1h1M23 1h1M27 1h1M31 1h1M1 4h1M5 4h1M9 4h1M13 4h1M17 4h1M21 4h1M25 4h1M29 4h1M3 7h1M7 7h1M11 7h1M15 7h1M19 7h1M23 7h1M27 7h1M31 7h1M1 10h1M5 10h1M9 10h1M13 10h1M17 10h1M21 10h1M25 10h1M29 10h1M3 13h1M7 13h1M11 13h1M15 13h1M19 13h1M23 13h1M27 13h1M31 13h1M1 16h1M5 16h1M9 16h1M13 16h1M17 16h1M21 16h1M25 16h1M29 16h1M3 19h1M7 19h1M11 19h1M15 19h1M19 19h1M23 19h1M27 19h1M31 19h1M1 22h1M5 22h1M9 22h1M13 22h1M17 22h1M21 22h1M25 22h1M29 22h1M3 25h1M7 25h1M11 25h1M15 25h1M19 25h1M23 25h1M27 25h1M31 25h1M1 28h1M5 28h1M9 28h1M13 28h1M17 28h1M21 28h1M25 28h1M29 28h1M3 31h1M7 31h1M11 31h1M15 31h1M19 31h1M23 31h1M27 31h1M31 31h1\" />";
    string constant internal S01 = "<path stroke=\"#ebd6ff\" d=\"M1 1h31M1 2h1M31 2h1M1 3h1M3 3h27M31 3h1M1 4h1M3 4h1M29 4h1M31 4h1M1 5h1M3 5h1M5 5h23M29 5h1M31 5h1M1 6h1M3 6h1M5 6h1M27 6h1M29 6h1M31 6h1M1 7h1M3 7h1M5 7h1M7 7h19M27 7h1M29 7h1M31 7h1M1 8h1M3 8h1M5 8h1M7 8h1M25 8h1M27 8h1M29 8h1M31 8h1M1 9h1M3 9h1M5 9h1M7 9h1M9 9h15M25 9h1M27 9h1M29 9h1M31 9h1M1 10h1M3 10h1M5 10h1M7 10h1M9 10h1M23 10h1M25 10h1M27 10h1M29 10h1M31 10h1M1 11h1M3 11h1M5 11h1M7 11h1M9 11h1M11 11h11M23 11h1M25 11h1M27 11h1M29 11h1M31 11h1M1 12h1M3 12h1M5 12h1M7 12h1M9 12h1M11 12h1M21 12h1M23 12h1M25 12h1M27 12h1M29 12h1M31 12h1M1 13h1M3 13h1M5 13h1M7 13h1M9 13h1M11 13h1M13 13h7M21 13h1M23 13h1M25 13h1M27 13h1M29 13h1M31 13h1M1 14h1M3 14h1M5 14h1M7 14h1M9 14h1M11 14h1M13 14h1M19 14h1M21 14h1M23 14h1M25 14h1M27 14h1M29 14h1M31 14h1M1 15h1M3 15h1M5 15h1M7 15h1M9 15h1M11 15h1M13 15h1M15 15h3M19 15h1M21 15h1M23 15h1M25 15h1M27 15h1M29 15h1M31 15h1M1 16h1M3 16h1M5 16h1M7 16h1M9 16h1M11 16h1M13 16h1M15 16h1M17 16h1M19 16h1M21 16h1M23 16h1M25 16h1M27 16h1M29 16h1M31 16h1M1 17h1M3 17h1M5 17h1M7 17h1M9 17h1M11 17h1M13 17h1M17 17h1M19 17h1M21 17h1M23 17h1M25 17h1M27 17h1M29 17h1M31 17h1M1 18h1M3 18h1M5 18h1M7 18h1M9 18h1M11 18h1M13 18h5M19 18h1M21 18h1M23 18h1M25 18h1M27 18h1M29 18h1M31 18h1M1 19h1M3 19h1M5 19h1M7 19h1M9 19h1M11 19h1M19 19h1M21 19h1M23 19h1M25 19h1M27 19h1M29 19h1M31 19h1M1 20h1M3 20h1M5 20h1M7 20h1M9 20h1M11 20h9M21 20h1M23 20h1M25 20h1M27 20h1M29 20h1M31 20h1M1 21h1M3 21h1M5 21h1M7 21h1M9 21h1M21 21h1M23 21h1M25 21h1M27 21h1M29 21h1M31 21h1M1 22h1M3 22h1M5 22h1M7 22h1M9 22h13M23 22h1M25 22h1M27 22h1M29 22h1M31 22h1M1 23h1M3 23h1M5 23h1M7 23h1M23 23h1M25 23h1M27 23h1M29 23h1M31 23h1M1 24h1M3 24h1M5 24h1M7 24h17M25 24h1M27 24h1M29 24h1M31 24h1M1 25h1M3 25h1M5 25h1M25 25h1M27 25h1M29 25h1M31 25h1M1 26h1M3 26h1M5 26h21M27 26h1M29 26h1M31 26h1M1 27h1M3 27h1M27 27h1M29 27h1M31 27h1M1 28h1M3 28h25M29 28h1M31 28h1M1 29h1M29 29h1M31 29h1M1 30h29M31 30h1M31 31h1\" />";

    // 01 9A DD 31 41

    function constructBackgorund(uint256 seed) internal pure returns (string memory) {
        uint40 backgroundSeed = uint40(seed >> 8*4);
        string memory color;

        if (backgroundSeed > 250) {
            color = B00;
        } else if (backgroundSeed > 210) {
            color = B01;
        } else if (backgroundSeed > 170) {
            color = B02;
        } else if (backgroundSeed > 130) {
            color = B03;
        } else if (backgroundSeed > 90) {
            color = B04;
        } else if (backgroundSeed > 70) {
            color = B05;
        } else if (backgroundSeed > 50) {
            color = B06;
        } else if (backgroundSeed > 30) {
            color = B07;
        } else if (backgroundSeed > 15) {
            return S00;
        } else {
            return S01;
        }

        return string.concat(
            BACKGROUND_PREFIX,
            color,
            BACKGROUND_SUFFIX
        );
    }
}

